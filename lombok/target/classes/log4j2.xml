<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="INFO" monitorInterval="30">
    <Properties>
        <!-- 自定义变量，日志文件目录 -->
        <Property name="log.path">./log</Property>
        <Property name="log.fileName">test.log</Property>
    </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--控制台输出日志-->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %l - %msg%n " />
        </Console>
        <!-- 日志输出到文件，按天分割，历史日志加时间后缀 -->
        <RollingFile name="RollingFileInfo" fileName="${log.path}/${log.fileName}"
                     filePattern="${log.path}/${log.fileName}.%d{yyyy-MM-dd}">

            <!--只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 日志的格式 -->
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>

            <Policies>
                <!-- modulate为 true 调整时间，比如现在是早上3am，interval是4，那么第一次滚动是在4am，接着是8am，12am...而不是7am-->
                <!-- interval 是切分间隔，和 filePattern 有关，指定的interval是1，结合起来就是每1天生成一个新文件。如果改成%d{yyyy-MM-dd HH}，最小粒度为小时，则每一个小时生成一个文件 -->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <!-- 日志文件的保存的最大数量 -->
            <DefaultRolloverStrategy max="7"/>
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入appender，appender才会生效-->
    <loggers>

        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.mybatis" level="INFO"/>

        <root level="info">
            <!-- 本地测试的话，可以注释掉  RollingFileInfo，这样就不会再生成日志文件 -->
<!--            <appender-ref ref="RollingFileInfo"/>-->
            <appender-ref ref="Console"/>
        </root>

    </loggers>

</configuration>